<?php

/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2020 B2W Companhia Digital. (http://www.bseller.com.br/)
 * Access https://ajuda.skyhub.com.br/hc/pt-br/requests/new for questions and other requests.
 */

namespace B2W\SkyHub\Model\Transformer\Product\VariationAttributes;

use B2W\SkyHub\Model\Resource\Collection;
use B2W\SkyHub\Contract\Entity\Product\SpecificationEntityInterface;
use B2W\SkyHub\Model\Entity\Product\AttributeEntity;

/**
 * Class EntityToApi
 * @package B2W\SkyHub\Model\Transformer\Product\VariationAttribute
 */
class EntityToApi
{
    /**
     * @param Collection $collection
     * @param $parentTransformer
     * @return null
     */
    public function convert(Collection $collection, $parentTransformer)
    {
        /** @var \SkyHub\Api\EntityInterface\Catalog\Product $productInterface */
        $productInterface = $parentTransformer->getInterface();

        /** @var SpecificationEntityInterface $attribute */
        foreach ($collection as $attribute) {
            if (!$attribute) {
                continue;
            }

            if (!($attribute instanceof SpecificationEntityInterface)) {
                continue;
            }

            if (!($attribute->getAttribute() instanceof AttributeEntity)) {
                if (!isset($productInterface->getData()['id']) || !$productInterface->getData()['id']) {
                    continue;
                }
                
                $attrMeta = $this->getAttributesMeta($productInterface);
                if (!isset($attrMeta[0])) {
                    continue;
                }

                if (!isset($attrMeta[0][$attribute->getAttributeInBase()])) {
                    continue;
                }

                if (!isset($attrMeta[0][$attribute->getAttributeInBase()]['is_variation'])) {
                    continue;
                }

                if ($attrMeta[0][$attribute->getAttributeInBase()]['is_variation'] != '1') {
                    continue;
                }
                $productInterface->addVariationAttribute(
                    $attribute->getAttribute()
                );
                continue;
            }

            $productInterface->addVariationAttribute(
                $attribute->getAttribute()->getCode()
            );
        }

        return null;
    }

    /**
     * Get attribute
     *
     * @param \SkyHub\Api\EntityInterface\Catalog\Product $productInterface
     * @return array
     */
    protected function getAttributesMeta(\SkyHub\Api\EntityInterface\Catalog\Product $productInterface)
    {
        return get_post_meta($productInterface->getData()['id'], '_product_attributes');
    }
}
